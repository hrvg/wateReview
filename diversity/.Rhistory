# heat map
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a + scale_fill_viridis() +
theme_pubr() +
title(main = "Quantity of LDA topics in each NSF general category", x = "NSF general category", y = "LDA language")
a + scale_fill_viridis() +
theme_pubr() +
ggtitle("Quantity of LDA topics in each NSF general category")
a + scale_fill_viridis() +
theme_pubr() +
labs(title= "LDA performance",
y="NSF general categories", x = "LDA for each language")
# heat map
x2$value = c("physical sciences","life sciences","engineering","social sciences","mathematics & statistics")
View(x2)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a + scale_fill_viridis() +
theme_pubr() +
labs(title= "LDA performance",
y="NSF general categories", x = "LDA for each language")
a <- ggplot(data = x2, aes(x = lang, y = reorder(value)) +
a <- ggplot(data = x2, aes(x = lang, y = reorder(value))) +
geom_tile(aes(fill = n))
a <- ggplot(data = x2, aes(x = lang, y = reorder(value))) +
geom_tile(aes(fill = n))
a
a <- ggplot(data = x2, aes(x = lang, y = order(value))) +
geom_tile(aes(fill = n))
a
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a
# heat map
x2$value<-factor(x2$value,levels=c("physical sciences","life sciences","engineering","social sciences","mathematics & statistics"))
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a
a <- ggplot(data = x2, aes(x = lang, y = reorder(-value))) +
geom_tile(aes(fill = n))
a
# heat map
x2$value<-factor(x2$value,levels=c("mathematics & statistics","social sciences","engineering","life sciences"," physical sciences"))
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a
# heat map
x2$value<-factor(x2$value,levels=c("mathematics & statistics","social sciences","engineering","life sciences","physical sciences"))
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a
x2 <- x %>%
filter(variable == "NSF_general") %>%
filter(value != "NA") %>%
group_by(value, lang) %>%
tally
ggbarplot(x2, x = "value", y = "n",
fill = "lang",
color = "white",
palette = c("#00AFBB", "#FC4E07",  "#E7B800"),
rotate = TRUE)
# heat map
x2$value<-factor(x2$value,levels=c("mathematics & statistics","social sciences","engineering","life sciences","physical sciences"))
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a
a + scale_fill_viridis() +
theme_pubr() +
labs(title= "LDA performance",
y="NSF general categories", x = "LDA for each language")
a + scale_fill_viridis() +
theme_pubr() +
labs(title= "LDA performance",
y="NSF general categories", x = "LDA for each language") +
theme(legen.position = "right")
a + scale_fill_viridis() +
theme_pubr() +
labs(title= "LDA performance",
y="NSF general categories", x = "LDA for each language") +
theme(legen.position = r)
a <- a + scale_fill_viridis() +
theme_pubr() +
labs(title= "LDA performance",
y="NSF general categories", x = "LDA for each language") +
# try wide
x3 <- x2 %>% spread(lang,n)
a <- a + scale_fill_viridis() +
theme_pubr() +
labs(title= "LDA performance",
y="NSF general categories", x = "LDA for each language")
install.packages("ggplotify")
library(ggplotify)
install.packages("plotly")
install.packages("plotly")
plotly::ggplotly(a)
names(x2) <- c("NSF general category", "language","number of LDA topics")
a <- ggplot(data = x2, aes(x = language, y = NSF general category)) +
geom_tile(aes(fill = n))
a
a <- ggplot(data = x2, aes(x = language, y = NSF general category)) +
geom_tile(aes(fill = number of LDA topics))
a <- ggplot(data = x2, aes(x = language, y = NSF general category)) +
geom_tile(aes(fill = number of LDA topics))
a <- ggplot(data = x2, aes(x = language, y = NSF general category)) +
geom_tile(aes(fill = number of LDA topics))
a <- ggplot(data = x2, aes(x = language, y = NSF general category)) +
geom_tile(aes(fill = number of LDA topics))
a
a <- a +
scale_fill_color() +
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a <- a +
scale_foll_gradient(low = "white", high = "black")+
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a <- a +
scale_fill_gradient(low = "white", high = "black")+
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a <- a +
scale_fill_grey() +
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
library(dplyr)
library(reshape2)
library(ggpubr)
library(tidyr)
library(ggplot2)
en <- read.csv("./topic_names_en.csv")
es <- read.csv("./topic_names_es.csv")
pt <- read.csv("./topic_names_pt.csv", na.strings=c("","NA"))
en$lang <- "en"
es$lang <- "es"
pt$lang <- "pt"
en2 <- melt(en,
id.vars = c("topic_id","lang"))
es2 <- melt(es,
id.vars = c("topic_id","lang"))
pt2 <- melt(pt,
id.vars = c("topic_id","lang"))
x <- rbind(en2,es2,pt2)
x2 <- x %>%
filter(variable == "NSF_general") %>%
filter(value != "NA") %>%
group_by(value, lang) %>%
tally
ggbarplot(x2, x = "value", y = "n",
fill = "lang",
color = "white",
palette = c("#00AFBB", "#FC4E07",  "#E7B800"),
rotate = TRUE)
# heat map
x2$value<-factor(x2$value,levels=c("mathematics & statistics","social sciences","engineering","life sciences","physical sciences"))
names(x2) <- c("NSF general category", "language","number of LDA topics")
a <- ggplot(data = x2, aes(x = language, y = NSF general category)) +
geom_tile(aes(fill = number of LDA topics))
a
x2 <- x %>%
filter(variable == "NSF_general") %>%
filter(value != "NA") %>%
group_by(value, lang) %>%
tally
# heat map
x2$value<-factor(x2$value,levels=c("mathematics & statistics","social sciences","engineering","life sciences","physical sciences"))
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a
a <- a +
scale_fill_grey() +
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a
a <- a +
scale_fill_grey(start = 0, end = 20) +
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a
a <- a +
scale_fill_grey(start = 0, end = 20) +
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a
a <- a +
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a
a
x2 <- x %>%
filter(variable == "NSF_general") %>%
filter(value != "NA") %>%
group_by(value, lang) %>%
tally
# heat map
x2$value<-factor(x2$value,levels=c("mathematics & statistics","social sciences","engineering","life sciences","physical sciences"))
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n))
a
a <- a +
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a
a <- a +
scale_fill_grey +
theme_pubr() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")
a
a +
scale_fill_grey() +
labs(title= "LDA coverage",
y="NSF general categories", x = "LDA for each language")+
theme_pubr()
a +
scale_fill_gradient(low = cadetblue1, high = cadetblue4) +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a +
scale_fill_gradient(low = "cadetblue1", high = "cadetblue4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a +
scale_fill_gradient(low = "lightcyan", high = "lightcyan4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.7, height=0.7))
a
a +
scale_fill_gradient(low = "lightcyan", high = "lightcyan4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.9, height=0.9))
a
a +
scale_fill_gradient(low = "lightcyan", high = "lightcyan4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
a +
scale_fill_gradient(low = "lightcyan", high = "lightcyan4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue14") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
plotly::ggplotly(a)
a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a<- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
plotly::ggplotly(a)
a<- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a
View(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
filter(value != "NA") %>%
group_by(value, lang) %>%
tally
View(x2)
######## graphing #############
ggbarplot(x2, x = "value", y = "n",
fill = "lang",
color = "white",
palette = c("#00AFBB", "#FC4E07",  "#E7B800"),
rotate = TRUE)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF general categories",
x = "LDA for each language")+
theme_pubr()
a
plotly::ggplotly(a)
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
######## filter #############
x2 <- x %>%
filter(variable == "NSF_general") %>%
filter(value != "NA") %>%
group_by(value, lang) %>%
tally
## need to order based on engligh numbers
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
## need to order based on engligh numbers
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
filter(value != "NA") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
filter(value != "NA") %>%
group_by(value, lang) %>%
tally
View(x2)
# need to order based on engligh numbers
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
x2 <- na.rm(x2)
View(x)
x <- na.omit(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
#filter(value != "NA") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
x <- rbind(en2,es2,pt2)
x <- na.omit(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
x2 <- na.omit(x2)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
######## filter #############
x2 <- x %>%
filter(variable == "NSF_general") %>%
group_by(value, lang) %>%
tally
library(dplyr)
library(reshape2)
library(ggpubr)
library(tidyr)
library(ggplot2)
######## load data #############
en <- read.csv("./topic_names_en.csv")
es <- read.csv("./topic_names_es.csv")
pt <- read.csv("./topic_names_pt.csv", na.strings=c("","NA"))
en$lang <- "en"
es$lang <- "es"
pt$lang <- "pt"
en2 <- melt(en,
id.vars = c("topic_id","lang"))
es2 <- melt(es,
id.vars = c("topic_id","lang"))
pt2 <- melt(pt,
id.vars = c("topic_id","lang"))
x <- rbind(en2,es2,pt2)
x <- na.omit(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_general") %>%
group_by(value, lang) %>%
tally
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
x2 <- na.omit(x2)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
x2 <- na.omit(x2)
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.97, height=0.97))
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
a <- ggplot(data = x2, aes(x = lang, y = value)) +
geom_tile(aes(fill = n, width=0.9, height=0.9)) # edit for specific vs. general
a
a <- a +
scale_fill_gradient(low = "lightsteelblue1", high = "lightsteelblue4") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language")+
theme_pubr()
a
View(en)
