install.packages("flexdashboard")
install.packages("shiny")
install.packages("shinydashboard")
sessionInfo()
updateR
library(updateR)
library("updateR")
install.packages("updateR")
install.packages("htmltools")
update.packages(checkBuilt=TRUE, ask=FALSE)
l.present_data <- list()
vars <- c("tmin", "tmax", "prec", "bio")
for (i in seq_along(vars)){
l.present_data[[i]] <- raster::getData("worldclim", var = vars[i], res = 2.5)
}
library(raster)
present.data <- do.call(stack, l.present_data)
writeRaster(present.data, "present_data.tiff")
writeRaster(present.data, "present_data.tif")
save(present.data, "present_data.rda")
save("present.data", "present_data.rda")
save(present.data, "present_data.rda")
save(present.data, file = "present_data.rda")
vars <- c("tmin","tmax","prec","bio") # variables to get
wc <- lapply(vars, function(x) {getData("worldclim", var = x, res = 2.5)}) # world clim vars
wc
wcc <- do.call(stack, wc)
wcc
saveRDS(wcc, file = "wcc")
save(wcc, file = "wcc.rda")
k <- seq(3, 10)
k
2 * k - 3
prod(2 * k - 3)
prod(2 * k) - 3)
prod(2 * k) - 3
prod(2 * k) - 3)
prod(2 * k - 3)
k <- seq(3, 4)
prod(2 * k - 3)
k
prod(2 * seq(3,5) - 3)
prod(2 * seq(3,10) - 3)
prod(2 * seq(3,10) - 3)
prod(2 * seq(3, 3) - 3)
prod(2 * seq(3, 3) - 3)
N <- lapply(seq(3, 10), function(k) prod(2 * seq(3, k) - 3))
N
N <- sapply(seq(3, 10), function(k) prod(2 * seq(3, k) - 3))
N
N <- c(1, N)
N
K <- seq(2, 10)
N
K
plot(K, N)
loglog(K, N)
plot(K, N, log = "y")
plot(K, N, log = "y", labx = "number of classes")
plot(K, N, log = "y", xlab = "number of classes")
plot(K, N, log = "y", xlab = "number of classes", ylab = "number of possible trees")
dev.new()
dev.new()
plot(K, N, log = "y", xlab = "number of classes", ylab = "number of possible trees")
pdf("KvN")
plot(K, N, log = "y", xlab = "number of classes", ylab = "number of possible trees")
dev.off()
N <- sapply(seq(3, 10), function(k) prod(2 * seq(3, k) - 3))
N <- c(1, N)
K <- seq(2, 10)
N
K
?combinatorics
??combinatorics
??combination
combn(10, 2)
combn(10, 8)
combn(10, 10)
combn(10, 2)
combn(10, 9)
combn(10, 2)
combn(10, 8)
combn(8, 8)
choose(8, 2)
lchoose(8, 2)
log(28)
choose(8, 8)
choose(8, 2)
choose(28, 4)
prod(2 * seq(3,8) - 3)
combn(8, 2)
choose(8, 2) ** 4
choose(8, 2) * choose(6, 2) * choose(4, 2) * choose(2, 2)
choose(8, 2)
combn(8, 2)
combn(6, 2)
combn(4, 2)
combn(3, 2)
combn(6, 2)
combn(4, 2)
duplicated(combn(4, 2))
combn(4, 2)
prod(2 * seq(3, 4) - 3)
prod(2 * seq(3, 4)) - 3
combn(4, 2)
expand.grid(4, 2)
expand.grid(seq(1, 6))
expand.grid(seq(1, 6), seq(1, 6))
comb_with_replacement <- function(n, r){
return( factorial(n + r - 1) / (factorial(r) * factorial(n - 1)) )
}
comb_with_replacement(4, 2)
combn(4, 2)
combn(4, 2)
combn(10, 2)
combn(3, 2)
combn(4, 2)
2 * (4-1
)
(4-1) + (4-2)
combn(6, 2)
(6 - 1) + (6 - 2)
factorial(4) / factorial(2)
choose(4, 2)
factorial(4) / (factorial(4 - 2) * factorial(2))
(4-1) + (4-2)
choose(4, 2)
choose(4, 2) - (4 - 1 + 4 - 2)
choose(6, 2) - (6 - 1 + 6 - 2)
choose((choose(6, 2) - (6 - 1 + 6 - 2)), 1à
choose((choose(6, 2) - (6 - 1 + 6 - 2)), 1)
combn(3, 2)
combn(4, 2)
1/2 choose(4, 2)
1/2 * choose(4, 2)
1/2 * choose(6, 3)
1/2 * (choose(4, 2))
1/2 * (choose(4, 2)) * 1 * 1
T((5+1)/2)
choose(5, 3)
choose(4, 2)
choose(4, 2) * 0.5
choose(5, 3)
choose(5, 3)
choose(4, 2)
choose(6, 2)
choose(4, 2)
choose(7, 2)
choose(5, 6/2)
choose(5, 4/2)
choose(5, 3)
choose(5, 2)
combn(5, 2)
combn(5, 3)
combn(5, 5)
factorial(5)/factorial(0)
factorial(0)
factorial(4)
factorial(3)
factorial(3) / factorial(3-3) / factorial(3)
factorial(2)
factorial(4)
factorial(5)
factorial(2)
factorial(3)
sapply(seq(5), factorial)
sapply(seq(5), choose, 2)
sapply(seq(2, 5), choose, 2)
sapply(seq(2, 5), function(k) choose(k, k/2) )
sapply(seq(2, 6, 2), function(k) choose(k, k/2) )
sapply(seq(2, 6, 2), function(k) 0.5 * choose(k, k/2) )
factorial(4) / 2^(4/2)
factorial(4)
2^2
factorial(5) / 2^[5/2]
factorial(5) / 2^(5/2)
factorial(4) / 2^(4/2)
2^4
2^3
combn(3)
combn(3, 1)
factorial(3)
factorial(6, 2)
combn(4, 2)
choose(4, 2)
2 * n - 3
2 * 4 - 3
choose(5, 2)
combn(5, 2)
choose(5, 2) - ((5-1 + 5 - 2)
)
#####################
##### LIBRARIES #####
#####################
library(pdftools)
#################
##### UTILS #####
#################
import::here(.from = "./R/utils/envpath.R",
get_rootdir)
########################
##### INITIALIZING #####
########################
# root.dir <- get_rootdir()
root.dir <- "/media/hguillon/Seagate Expansion Drive"
################
##### MAIN #####
################
get_mail <- function(pdf){
# if (lang == "spanish"){
# 	pdf <- gsub("i´", "í", pdf)
# 	pdf <- gsub("e´", "é", pdf)
# }
text <- pdf_text(pdf)
text2 <- strsplit(text, "\n")
i1 <- grep("@", text2)
if (length(i1) >= 1) {
mails <- lapply(i1, function(ii){
i2 <- grep("@", text2[[ii]])
text3 <- lapply(i2, function(i) unlist(strsplit(text2[[ii]][[i]], " ")))
mail <- lapply(text3, function(txt) txt[grep("@", txt)])
mail <- gsub("\r", "", mail)
mail <- gsub("\n", "", mail)
return(mail)
})
return(unlist(mails))
} else {
warning("More than one email address! (or less than one email address)")
return(length(i1))
}
}
lang <- "spanish"
# Sys.setlocale(category = "LC_ALL", locale = "Spanish")
# pdf.dirs <- c(
# 	paste0("data/latin_america/corpus_pdf/", lang, "/", lang, ".Data"),
# 	paste0("data/latin_america/corpus_pdf/", lang, "/manual_download_", lang)
# 	)
pdf.dirs <- c(
paste0("latin_america/corpus_pdf/", lang, "/", lang, ".Data"),
paste0("latin_america/corpus_pdf/", lang, "/manual_download_", lang)
)
lf <- lapply(pdf.dirs, function(pdf.dir){
list.files(file.path(root.dir, pdf.dir), recursive = TRUE, pattern = ".pdf", full.names = TRUE)
})
lf <- c(lf[[1]], lf[[2]])
mails <- unlist(lapply(lf, get_mail))
write.table(mails, file.path(root.dir, pdf.dir, paste0("mails_", lang, ".csv")), row.names = FALSE, col.names = FALSE)
setwd("/media/hguillon/hrvg/research/exploitation/R/latin_america")
source("./R/utils/get_emails.R")
install.packages("pdftools")
source("./R/utils/get_emails.R")
install.packages("pdftools", dependencies = TRUE)
install.packages("poppler-cpp", dependencies = TRUE)
install.packages("pdftools", dependencies = TRUE)
source("./R/utils/get_emails.R")
write.table(mails, file.path(root.dir, pdf.dirs[1], paste0("mails_", lang, ".csv")), row.names = FALSE, col.names = FALSE)
lang <- "portuguese"
# pdf.dirs <- c(
# 	paste0("data/latin_america/corpus_pdf/", lang, "/", lang, ".Data"),
# 	paste0("data/latin_america/corpus_pdf/", lang, "/manual_download_", lang)
# 	)
# more dirty fixes, see disclaimer
pdf.dirs <- c(
paste0("latin_america/corpus_pdf/", lang, "/", lang, ".Data"),
paste0("latin_america/corpus_pdf/", lang, "/manual_download_", lang)
)
lf <- lapply(pdf.dirs, function(pdf.dir){
list.files(file.path(root.dir, pdf.dir), recursive = TRUE, pattern = ".pdf", full.names = TRUE)
})
lf <- c(lf[[1]], lf[[2]])
mails <- unlist(lapply(lf, get_mail))
write.table(mails, file.path(root.dir, pdf.dirs[1], paste0("mails_", lang, ".csv")), row.names = FALSE, col.names = FALSE)
source("./R/utils/get_emails.R")
?safely
source("./R/utils/get_emails.R")
source("./R/utils/get_emails.R")
source("./R/utils/get_emails.R")
