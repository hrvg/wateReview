labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'plain', 'plain', 'bold')))
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain','plain','plain'
))) +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain','plain','plain'
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'bold',
'plain', 'plain', 'bold', 'bold', 'bold','bold','bold'
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
library(dplyr)
library(reshape2)
library(ggpubr)
library(tidyr)
library(ggplot2)
library(forcats)
######## load data #############
en <- read.csv("./topic_names_en.csv")
es <- read.csv("./topic_names_es.csv")
pt <- read.csv("./topic_names_pt.csv", na.strings=c("","NA"))
en$lang <- "en"
es$lang <- "es"
pt$lang <- "pt"
en2 <- melt(en,
id.vars = c("topic_id","lang"))
es2 <- melt(es,
id.vars = c("topic_id","lang"))
pt2 <- melt(pt,
id.vars = c("topic_id","lang"))
x <- rbind(en2,es2,pt2)
x <- na.omit(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers + number of overall topics
x2$nlang <- x2 %>%
group_by(value) %>%
group_map(~ rep(length(table(.x$lang)), length(table(.x$lang)))) %>%
unlist()
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
x2 <- na.omit(x2) # missing 1 spanish?
x2$lang <- factor(x2$lang, labels = c("English", "Spanish", "Portuguese"))
######## heat map #############
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
library(dplyr)
library(reshape2)
library(ggpubr)
library(tidyr)
library(ggplot2)
library(forcats)
######## load data #############
en <- read.csv("./topic_names_en.csv")
es <- read.csv("./topic_names_es.csv")
pt <- read.csv("./topic_names_pt.csv", na.strings=c("","NA"))
en$lang <- "en"
es$lang <- "es"
pt$lang <- "pt"
en2 <- melt(en,
id.vars = c("topic_id","lang"))
es2 <- melt(es,
id.vars = c("topic_id","lang"))
pt2 <- melt(pt,
id.vars = c("topic_id","lang"))
x <- rbind(en2,es2,pt2)
x <- na.omit(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers + number of overall topics
x2$nlang <- x2 %>%
group_by(value) %>%
group_map(~ rep(length(table(.x$lang)), length(table(.x$lang)))) %>%
unlist()
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
x2 <- na.omit(x2) # missing 1 spanish?
x2$lang <- factor(x2$lang, labels = c("English", "Spanish", "Portuguese"))
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "Topic model coverage",
y="NSF specific categories",
x = "Topic model for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
setwd("~/R_code/LAC")
source("./diversity/lib_lac.R")
################### libraries #########################
library(dplyr)
library(vegan)
library(broom)
library(reshape2)
library(ggpubr)
library(data.table)
library(wesanderson)
library(ggplot2)
library(philentropy)
library(scales)
library(ggplotify)
library(plotly)
library(tidyr)
library(tidyverse)
library(ggrepel)
################### raw files #########################
general <- readRDS("./consolidated_results_NSF_general.Rds")
specific <- readRDS("./consolidated_results_NSF_specific.Rds") # 45 themes
methods <- readRDS("./consolidated_results_methods.Rds")
budget <- readRDS("./consolidated_results_water budget.Rds")
theme <- readRDS("./consolidated_results_theme.Rds")
budget <- read.csv("./diversity/csvs/waterbudgetdistance.csv")
methods <- read.csv("./diversity/csvs/methodsdistance.csv")
theme <- read.csv("./diversity/csvs/themesdistance.csv")
general <- read.csv("./diversity/csvs/generaldistance.csv")
specific <- read.csv("./diversity/csvs/specificldistance.csv")
######## general ##########
general.base <- ggplot(general,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
#general.edit <-
general.base +
#grids() +
coord_fixed() +
#ylim(0.55,0.95) +
#xlim(0.25,0.65) +
labs(title = "NSF General Categories")
######## themes ##########
ggscatter(theme, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
themes.base <- ggplot(theme,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
themes.edit <-
themes.base +
#grids() +
coord_fixed() +
labs(title = "Themes")
######## specific ##########
gscatter(specific, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
specific.base <- ggplot(specific,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
######## general ##########
general.base <- ggplot(general,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
general.edit <-
general.base +
#grids() +
coord_fixed() +
#ylim(0.55,0.95) +
#xlim(0.25,0.65) +
labs(title = "General topics")
######## specific ##########
gscatter(specific, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
specific.base <- ggplot(specific,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
######## specific ##########
gscatter(specific, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
######## specific ##########
ggscatter(specific, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
View(specific)
budget <- read.csv("./diversity/csvs/waterbudgetdistance.csv")
methods <- read.csv("./diversity/csvs/methodsdistance.csv")
theme <- read.csv("./diversity/csvs/themesdistance.csv")
general <- read.csv("./diversity/csvs/generaldistance.csv")
specific <- read.csv("./diversity/csvs/specificldistance.csv")
######## methods #########
methods.base <- ggplot(methods,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
methods.edit <-
methods.base +
#grids() +
coord_fixed() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
labs(title = "Research methods")
######## budget #########
budget.base <- ggplot(budget,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
budget.edit <-
budget.base +
#grids() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
coord_fixed() +
labs(title = "Components of water budget")
######## general ##########
general.base <- ggplot(general,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
general.edit <-
general.base +
#grids() +
coord_fixed() +
#ylim(0.55,0.95) +
#xlim(0.25,0.65) +
labs(title = "General topics")
######## themes ##########
ggscatter(theme, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
themes.base <- ggplot(theme,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
themes.edit <-
themes.base +
#grids() +
coord_fixed() +
labs(title = "Themes")
######## specific ##########
ggscatter(specific, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
specific <- read.csv("./diversity/csvs/specificldistance.csv")
specific <- read.csv("./diversity/csvs/specificdistance.csv")
######## specific ##########
ggscatter(specific, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
specific.base <- ggplot(specific,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
specific.edit <-
specific.base +
#grids() +
coord_fixed() +
labs(title = "Specific  topics")
View(specific)
######## specific ##########
ggscatter(specific, y = "country_distance", x = "topic_distance",
label = "topic",
label.rectangle = TRUE,
repel = TRUE,
xlab = "Normality across documents",
ylab = "Normality across countries")
specific.base <- ggplot(specific,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
specific.base
specific.edit <-
specific.base +
coord_fixed() +
labs(title = "Specific  topics")
specific.edit
general.edit
specific.edit
