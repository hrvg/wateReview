group_by(value, lang) %>%
tally
# need to order based on engligh numbers + number of overall topics
x2$nlang <- x2 %>%
group_by(value) %>%
group_map(~ rep(length(table(.x$lang)), length(table(.x$lang)))) %>%
unlist()
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
x2 <- na.omit(x2) # missing 1 spanish?
x2$lang <- factor(x2$lang, labels = c("English", "Spanish", "Portuguese"))
######## heat map #############
a <- ggplot(data = x2, aes(x = lang,
y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0., height=0.9))
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr()
######## dot chart #############
ggbarplot(x2, x = "value", y = "n",
fill = "lang",
color = "white",
palette = c("#00AFBB", "#FC4E07",  "#E7B800"),
rotate = TRUE)
View(x2)
ggplot(data = x2, aes(x = lang,
y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0., height=0.9))
ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9))
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9))
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr()
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_tile(aes(label = n))
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n, color =white))
a
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr()
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n, color = "white"))
a
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr()
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n, fill = "white"))
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n), color = "white")
a
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr()
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
rremove("legend") +
theme_pubr()
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
rremove("guide") +
theme_pubr()
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
rremove("legend") +
theme_pubr()
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey48",
high = "grey20") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey76",
high = "grey20") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey67",
high = "grey0") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.x = element_text(face = c('bold', 'bold', 'plain', 'plain', 'bold')))
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.x = element_text(face = 'bold'))
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'plain', 'plain', 'bold')))
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain','plain','plain'
))) +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain','plain','plain'
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'bold',
'plain', 'plain', 'bold', 'bold', 'bold','bold','bold'
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
library(dplyr)
library(reshape2)
library(ggpubr)
library(tidyr)
library(ggplot2)
library(forcats)
######## load data #############
en <- read.csv("./topic_names_en.csv")
es <- read.csv("./topic_names_es.csv")
pt <- read.csv("./topic_names_pt.csv", na.strings=c("","NA"))
en$lang <- "en"
es$lang <- "es"
pt$lang <- "pt"
en2 <- melt(en,
id.vars = c("topic_id","lang"))
es2 <- melt(es,
id.vars = c("topic_id","lang"))
pt2 <- melt(pt,
id.vars = c("topic_id","lang"))
x <- rbind(en2,es2,pt2)
x <- na.omit(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers + number of overall topics
x2$nlang <- x2 %>%
group_by(value) %>%
group_map(~ rep(length(table(.x$lang)), length(table(.x$lang)))) %>%
unlist()
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
x2 <- na.omit(x2) # missing 1 spanish?
x2$lang <- factor(x2$lang, labels = c("English", "Spanish", "Portuguese"))
######## heat map #############
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
library(dplyr)
library(reshape2)
library(ggpubr)
library(tidyr)
library(ggplot2)
library(forcats)
######## load data #############
en <- read.csv("./topic_names_en.csv")
es <- read.csv("./topic_names_es.csv")
pt <- read.csv("./topic_names_pt.csv", na.strings=c("","NA"))
en$lang <- "en"
es$lang <- "es"
pt$lang <- "pt"
en2 <- melt(en,
id.vars = c("topic_id","lang"))
es2 <- melt(es,
id.vars = c("topic_id","lang"))
pt2 <- melt(pt,
id.vars = c("topic_id","lang"))
x <- rbind(en2,es2,pt2)
x <- na.omit(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers + number of overall topics
x2$nlang <- x2 %>%
group_by(value) %>%
group_map(~ rep(length(table(.x$lang)), length(table(.x$lang)))) %>%
unlist()
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
x2 <- na.omit(x2) # missing 1 spanish?
x2$lang <- factor(x2$lang, labels = c("English", "Spanish", "Portuguese"))
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "Topic model coverage",
y="NSF specific categories",
x = "Topic model for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
# calculate diversity by paper / for all of LAC
clean <- remove_year_country(specific) #  specify which (species group)
diversity_LA <- diversity_LAC(clean)
setwd("~/R_code/LAC")
source("./diversity/lib_lac.R")
################### libraries #########################
library(dplyr)
library(vegan)
library(broom)
library(reshape2)
library(ggpubr)
library(data.table)
library(wesanderson)
library(ggplot2)
library(philentropy)
library(scales)
library(ggplotify)
library(plotly)
library(tidyr)
library(tidyverse)
library(ggrepel)
################### raw files #########################
general <- readRDS("./consolidated_results_NSF_general.Rds")
specific <- readRDS("./consolidated_results_NSF_specific.Rds") # 45 themes
methods <- readRDS("./consolidated_results_methods.Rds")
budget <- readRDS("./consolidated_results_water budget.Rds")
theme <- readRDS("./consolidated_results_theme.Rds")
# calculate diversity by paper / for all of LAC
clean <- remove_year_country(specific) #  specify which (species group)
diversity_LA <- diversity_LAC(clean)
diversity_paper <- diversity(clean)
# calculate diversity by country
general2 <- remove_irrelevant(general)
specific2 <- remove_irrelevant(specific)
theme2 <- remove_irrelevant(theme)
budget2 <- remove_irrelevant(budget)
general2 <-  diversity_country(general2)
specific2 <- diversity_country(specific2)
theme2 <- diversity_country(theme2)
budget2 <- diversity_country(budget2)
View(budget2)
# calculate diversity by country
general2 <- remove_irrelevant(general)
specific2 <- remove_irrelevant(specific)
theme2 <- remove_irrelevant(theme)
budget2 <- remove_irrelevant(budget)
View(general)
View(specific)
