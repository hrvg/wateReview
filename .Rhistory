shpFarmsum <- readOGR(
dsn = system.file("maps", package = "spcosa"),
layer = "farmsum"
)
# stratify `Farmsum' into 50 strata
# NB: increase argument 'nTry' to get better results
set.seed(314)
myStratification <- stratify(shpFarmsum, nStrata = 50, nTry = 1)
# sample two sampling units per stratum
mySamplingPattern <- spsample(myStratification, n = 2)
# plot the resulting sampling pattern on
# top of the stratification
plot(myStratification, mySamplingPattern)
}
library(spcosa)
if (require(rgdal)) {
# read a vector representation of the `Farmsum' field
shpFarmsum <- readOGR(
dsn = system.file("maps", package = "spcosa"),
layer = "farmsum"
)
# stratify `Farmsum' into 50 strata
# NB: increase argument 'nTry' to get better results
set.seed(314)
myStratification <- stratify(shpFarmsum, nStrata = 50, nTry = 1)
# sample two sampling units per stratum
mySamplingPattern <- spsample(myStratification, n = 2)
# plot the resulting sampling pattern on
# top of the stratification
plot(myStratification, mySamplingPattern)
}
plot(shpFarmsum)
if (require(rgdal)) {
# read a vector representation of the `Farmsum' field
shpFarmsum <- readOGR(
dsn = system.file("maps", package = "spcosa"),
layer = "farmsum"
)
# stratify `Farmsum' into 50 strata
# NB: increase argument 'nTry' to get better results
set.seed(314)
myStratification <- stratify(shpFarmsum, nStrata = 50, nTry = 1)
# sample two sampling units per stratum
mySamplingPattern <- spsample(myStratification, n = 2)
# plot the resulting sampling pattern on
# top of the stratification
plot(myStratification, mySamplingPattern)
}
shpFarmsum
install.packages("IHA", repos="http://R-Forge.R-project.org")
library(IHA)
??IHA::group1
data("bullrun")
bullrun
library(zoo)
as.zoo()
?as.zoo
quit(save = )
library(readr)
tau_influence <- read_csv("tau_influence.csv")
View(tau_influence)
ind <- isTRUE(tau_influence$plot)
ind
ind <- tau_influence$plot
plot(tau_influence$tau[ind], tau_influence$a[ind])
plot(tau_influence$tau[ind], tau_influence$a[ind])
abline(h = 0.83 + 0.13)
abline(h = (0.83 + 0.13))
abline(h = (0.83  0.13))
abline(h = (0.83 - 0.13))
abline(h = (0.83 - 2 * 0.13))
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = [0, 1])
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1))
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
abline(h = (0.83 - 2 * 0.13))
abline(h = (0.83 + 2 * 0.13))
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
abline(h = (0.83 + 2 * 0.13))
abline(h = (0.83 - 2 * 0.13))
abline(h = (0.83 - 1* * 0.13))
abline(h = (0.83 - 1*  0.13))
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
abline(h = (0.83 + 2 * 0.13))
abline(h = (0.83 - 2 * 0.13))
points(0.12, 0.83)
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
abline(h = (0.83 + 2 * 0.13))
abline(h = (0.83 - 2 * 0.13))
points(tau_influence$tau[12], tau_influence$a[12])
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
abline(h = (0.83 + 2 * 0.13))
abline(h = (0.83 - 2 * 0.13))
points(tau_influence$tau[12], tau_influence$a[12], pch = 20)
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
lines(tau_influence$tau[ind], tau_influence$a[ind] + tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 2)
lines(tau_influence$tau[ind], tau_influence$a[ind] - tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 2)
abline(h = (0.83 + 2 * 0.13))
abline(h = (0.83 - 2 * 0.13))
points(tau_influence$tau[12], tau_influence$a[12], pch = 20)
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
lines(tau_influence$tau[ind], tau_influence$a[ind] + tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
lines(tau_influence$tau[ind], tau_influence$a[ind] - tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
abline(h = (0.83 + 2 * 0.13))
abline(h = (0.83 - 2 * 0.13))
points(tau_influence$tau[12], tau_influence$a[12], pch = 20)
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
lines(tau_influence$tau[ind], tau_influence$a[ind] + tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
lines(tau_influence$tau[ind], tau_influence$a[ind] - tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
abline(h = (0.83 + 2 * 0.13), lty = 2)
abline(h = (0.83 - 2 * 0.13), lty = 2)
points(tau_influence$tau[12], tau_influence$a[12], pch = 20)
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n", xlab = "Shield's parameter", ylab = "Variance scaling")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
lines(tau_influence$tau[ind], tau_influence$a[ind] + tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
lines(tau_influence$tau[ind], tau_influence$a[ind] - tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
abline(h = (0.83 + 2 * 0.13), lty = 2)
abline(h = (0.83 - 2 * 0.13), lty = 2)
points(tau_influence$tau[12], tau_influence$a[12], pch = 20)
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n", xlab = r"Shield's parameter $\tau$", ylab = "Variance scaling")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
lines(tau_influence$tau[ind], tau_influence$a[ind] + tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
lines(tau_influence$tau[ind], tau_influence$a[ind] - tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
abline(h = (0.83 + 2 * 0.13), lty = 2)
abline(h = (0.83 - 2 * 0.13), lty = 2)
points(tau_influence$tau[12], tau_influence$a[12], pch = 20)
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n", xlab = "Shield's parameter", ylab = "Variance scaling")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
lines(tau_influence$tau[ind], tau_influence$a[ind] + tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
lines(tau_influence$tau[ind], tau_influence$a[ind] - tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
abline(h = (0.83 + 2 * 0.13), lty = 2)
abline(h = (0.83 - 2 * 0.13), lty = 2)
points(tau_influence$tau[12], tau_influence$a[12], pch = 20)
dev.new()
plot(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5), type = "n", xlab = "Shield's parameter", ylab = "Variance scaling")
lines(tau_influence$tau[ind], tau_influence$a[ind], ylim = c(0, 1.5))
lines(tau_influence$tau[ind], tau_influence$a[ind] + tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
lines(tau_influence$tau[ind], tau_influence$a[ind] - tau_influence$a_std[ind], ylim = c(0, 1.5), lty = 3)
abline(h = (0.83 + 2 * 0.13), lty = 2)
abline(h = (0.83 - 2 * 0.13), lty = 2)
points(tau_influence$tau[12], tau_influence$a[12], pch = 20)
sampleNumber <- "10923l109092983"
strsplit(sampleNumber, "l")
a = 3
save(a, "a.rda")
save(a, filename = "a.rda")
save(a, filename = file.path("a.rda"))
?save
save(a, file = file.path("a.rda"))
b = 4
rm(a)
load("a.rda")
for (i in seq(4)) save(i, paste0(i, ".rda"))
for (i in seq(4)) save(i, file = paste0(i, ".rda"))
lf = list.files(file.path(comparison))
lf = list.files(file.path("comparison"))
lf
lf = list.files(file.path("comparison"), full.names = TRUE)
for (fname in lf) load(fname)
lapply(lf, function(fname)#)
lapply(lf, function(fname){})
lapply(lf, function(fname){load(fname); return(i)})
?rds
??rds
saveRDS()
?saveRDS()
library("raster")
v.dir <- "/home/justpwd/thesis/data/bossons-glacier/glacier/Velocity_MontBlanc_Berthier_RSE_2005"
r <- raster(file.path(v.dir, "correl_2003_UTM_w128to16_s8.hdr"))
r <- raster(file.path(v.dir, "correl_2003_UTM_w128to16_s8"))
r
spplot(r)
plot(r)
spplot(r)
x = rnorm(20)
x
y = - 2 x
y = - 2 * x
y
plot(x, y)
lm.fit(x, y)
lm.fit(y ~ x)
lm(y ~ x)
lmf <- lm(y ~ x)
summary(lmf)
lmf$coefficients
summary(lmf)
str(summary(lmf))
summary(lmf)$coefficients
summary(lmf)$coefficients[, 2]
summary(lmf)$coefficients[2, 2]
summary(lmf)
log
log(2)
log(exp(1))
rsconnect::setAccountInfo(name='justpwd', token='794C846764E849060AE46039A1A515B7', secret='KKcKAHfS0t8SUhfBz0C98qT1y9DNvINlS7VhbCIL')
rsconnect::setAccountInfo(name='justpwd', token='794C846764E849060AE46039A1A515B7', secret='KKcKAHfS0t8SUhfBz0C98qT1y9DNvINlS7VhbCIL')
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='justpwd', token='794C846764E849060AE46039A1A515B7', secret='KKcKAHfS0t8SUhfBz0C98qT1y9DNvINlS7VhbCIL')
rsconnect::setAccountInfo(name='justpwd', token='794C846764E849060AE46039A1A515B7', secret='KKcKAHfS0t8SUhfBz0C98qT1y9DNvINlS7VhbCIL')
unlink('Documents/Norge_cache', recursive = TRUE)
worked <- c(100, 101, 102, 103, 104, 105, 10, 116, 117, 118, 119, 11, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 12, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 13, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 14, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 15, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 16, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 17, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 18, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 19, 1, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 20, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 21, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 22, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 23, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 24, 250, 251, 252, 253, 254, 255, 256, 257, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 3, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 4, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 5, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 6, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 7, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 8, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 9)
which(!1:257 %in% worked)
worked <- c(100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 10, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 11, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 12, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 13, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 14, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 15, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 16, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 17, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 18, 190, 191, 192, 193, 195, 196, 197, 199, 19, 1, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 20, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 21, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 22, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 23, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 24, 250, 251, 252, 253, 254, 255, 256, 257, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 3, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 4, 50, 51, 52, 53, 55, 56, 57, 58, 59, 5, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 6, 70, 71, 72, 73, 74, 75, 76, 78, 79, 7, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 8, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 9)
which(!1:257 %in% worked)
worked <- c(100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 10, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 11, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 12, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 13, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 14, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 15, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 16, 170, 171, 172, 173, 174, 175, 176, 178, 179, 17, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 18, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 19, 1, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 20, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 21, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 22, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 23, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 24, 250, 251, 252, 253, 254, 255, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 3, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 4, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 5, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 6, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 7, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 8, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 9)
which(!1:257 %in% worked)
install.packages("shiny")
install.packages("shinydashboard")
install.packages("flexdashboard")
install.packages("sf")
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("raster")
install.packages("sp")
install.packages("tmap")
install.packages("leaflet")
install.packages("oce")
install.packages("somebm")
install.packages("scales")
install.packages("reshape2")
install.packages("spectral")
install.packages("cowplot")
install.packages("viridis")
#####################
##### LIBRARIES #####
#####################
library("shiny")
library("shinydashboard")
library("flexdashboard")
library("sf")
install.packages("sf")
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use MRO, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("MRO", ip$LibPath))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
library(raster)
install.packages("tmap")
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use MRO, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("MRO", ip$LibPath))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
install.packages("sf")
install.packages("rgeos")
library(regeos)
library(rgeos)
library(rgdal)
install.packages("rgdal")
install.packages("rgdal")
install.packages("sf")
library(sp)
rm(sp)
unloadNamespace(sp)
library(rgdal)
library(rgeos)
sessionInfo()
library(rgdal)
library(rgdal)
install.packages("methylKit")
library(devtools)
install_github("al2na/methylKit", build_vignettes=FALSE,
repos=BiocInstaller::biocinstallRepos(),
dependencies=TRUE)
install.packages("devtools")
install.packages("rvest")
library(rvest)
url <- https://uswest.ensembl.org/Sus_scrofa/Gene/Summary?db=core;g=ENSSSCG00000022101;r=12:19787858-19853505
url <- "https://uswest.ensembl.org/Sus_scrofa/Gene/Summary?db=core;g=ENSSSCG00000022101;r=12:19787858-19853505"
webpage <- read_html(url)
webpage
webpage$doc
webpage$node
webpage <- read_html(url, "summary-heading")
webpage
webpage <- read_html(url, ".summary-heading")
webpage
webpage <- read_html(url, "h1.summary-heading")
webpage
webpage <- read_html(url)
gene <- html_nodes(webpage, "h1.summary-heading")
gene
gene <- html_text(html_nodes(webpage, "h1.summary-heading"))
gene
gene <- strplit(html_text(html_nodes(webpage, "h1.summary-heading"), " ")
)
gene <- splitstrt(html_text(html_nodes(webpage, "h1.summary-heading"), " ")
)
gene <- splitstr(html_text(html_nodes(webpage, "h1.summary-heading"), " "))
gene <- strsplit(html_text(html_nodes(webpage, "h1.summary-heading"), " "))
gene <- strsplit(" ", html_text(html_nodes(webpage, "h1.summary-heading")))
gene
gene <- strsplit(html_text(html_nodes(webpage, "h1.summary-heading")), " ")
gene
url
gene <- html_nodes(webpage, "a.constant")
gene
gene <- html_nodes(webpage, "div.twocol div.row div.rhs")
gene
gene[1]
gene2 <- html_nodes(gene, "a.constant")
gene2
gene2 <- html_nodes(gene[1], "a.constant")
gene2
gene2 <- html_text(html_nodes(gene[1], "a.constant"))
gene2
ncbi_url <- "http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=gene&amp;cmd=Retrieve&amp;dopt=Graphics&amp;list_uids="
ncbi_webpage <- read_html(paste0(ncbi_url, gene2))
html_nodes(ncbi_webpage, "h1#gene-name")
gen2
gene2
html_nodes(ncbi_webpage, "h1#gene-name.span")
html_nodes(ncbi_webpage, "h1#gene-name.gn.span")
html_nodes(ncbi_webpage, "h1#gene-name.gn")
html_nodes(ncbi_webpage, "h1#gene-name")
html_nodes(html_nodes(ncbi_webpage, "h1#gene-name"), "gn")
html_nodes(html_nodes(ncbi_webpage, "h1#gene-name"), ".gn")
html_text(html_nodes(html_nodes(ncbi_webpage, "h1#gene-name"), ".gn"))
gene2 <- "100151976"
ncbi_webpage <- read_html(paste0(ncbi_url, gene2))
html_text(html_nodes(html_nodes(ncbi_webpage, "h1#gene-name"), ".gn"))
url <- "https://uswest.ensembl.org/Sus_scrofa/Gene/Summary?db=core;g=ENSSSCG00000022101;r=12:19787858-19853505"
webpage <- read_html(url)
gene <- html_nodes(webpage, "div.twocol div.row div.rhs")
gene2 <- html_nodes(gene, "a.constant")
ncbi_url <- "http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=gene&amp;cmd=Retrieve&amp;dopt=Graphics&amp;list_uids="
ncbi_webpage <- read_html(paste0(ncbi_url, gene2))
html_text(html_nodes(html_nodes(ncbi_webpage, "h1#gene-name"), ".gn"))
library("rvest")
url <- "https://uswest.ensembl.org/Sus_scrofa/Gene/Summary?db=core;g=ENSSSCG00000022101;r=12:19787858-19853505"
webpage <- read_html(url)
gene <- html_nodes(webpage, "div.twocol div.row div.rhs")
gene2 <- html_nodes(gene, "a.constant")
ncbi_url <- "http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=gene&amp;cmd=Retrieve&amp;dopt=Graphics&amp;list_uids="
ncbi_webpage <- read_html(paste0(ncbi_url, gene2))
html_text(html_nodes(html_nodes(ncbi_webpage, "h1#gene-name"), ".gn"))
ncbi_webpage
html_nodes(ncbi_webpage, "h1#gene-name")
gene2
url <- "https://uswest.ensembl.org/Sus_scrofa/Gene/Summary?db=core;g=ENSSSCG00000022101;r=12:19787858-19853505"
webpage <- read_html(url)
gene <- html_nodes(webpage, "div.twocol div.row div.rhs")
gene2 <- html_text(html_nodes(gene, "a.constant"))
ncbi_url <- "http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=gene&amp;cmd=Retrieve&amp;dopt=Graphics&amp;list_uids="
ncbi_webpage <- read_html(paste0(ncbi_url, gene2))
html_text(html_nodes(html_nodes(ncbi_webpage, "h1#gene-name"), ".gn"))
gene2
url <- "https://uswest.ensembl.org/Sus_scrofa/Gene/Summary?db=core;g=ENSSSCG00000022101;r=12:19787858-19853505"
webpage <- read_html(url)
gene <- html_nodes(webpage, "div.twocol div.row div.rhs")
gene2 <- html_text(html_nodes(gene[1], "a.constant"))
ncbi_url <- "http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=gene&amp;cmd=Retrieve&amp;dopt=Graphics&amp;list_uids="
ncbi_webpage <- read_html(paste0(ncbi_url, gene2))
html_text(html_nodes(html_nodes(ncbi_webpage, "h1#gene-name"), ".gn"))
x <- seq(8)
x
y <- c(8, 15, 33, 63, 112, 144, 103, 207)
plot(x, y)
log(1)
plot(x, y, log = "xy")
plot(x, y, log = "y")
plot(x, y, log = "xy")
linearmodel <- lm(log(y) ~ log(x))
linearmodel$coefficients
predict(linearmodel, log(2))
predict(linearmodel)
predict(linearmodel, newdata = log(9))
predict(linearmodel, newdata = data.frame(x = log(9)))
log(e)
log(exp(1))
linearmodel$coefficients[1]
exp(linearmodel$coefficients[1])
exp(linearmodel$coefficients[1]) * 2^linearmodel$coefficients[2]
exp(linearmodel$coefficients[1]) * 2^linearmodel$coefficients[9]
exp(linearmodel$coefficients[1]) * 9^linearmodel$coefficients[2]
plot(x, y, log = "xy", xlab = "Emails", ylab = "Time lag between emails")
plot(x, y,, xlab = "Emails", ylab = "Time lag between emails")
install.packages("sf")
library(sp)
install.packages("sf")
install.packages("sf")
install.packages("sf")
install.packages("sf")
library("sf")
install_github('andreacirilloac/updateR')
setwd("/mnt/2A80DBB180DB81AD/research/exploitation/R/latin_america")
install.packages("flexdashboard")
libraries <- c(
"circlize",
"cowplot",
"factoextra",
"forcats",
"ggplot2",
"ggsci",
"RColorBrewer",
"dplyr"
)
sapply(libraries, require)
install.packages("circlize")
install.packages("cowplot")
install.packages("factoextra")
install.packages("forcats")
install.packages("ggplot2")
install.packages("ggsci")
install.packages("RColorBrewer")
install.packages("dplyr")
### functions ###
import::here(.from = "./R/network_analysis/lib_network_analysis.R",
get_network,
VizSpots)
library(circlize)
library(cowplot)
library(forcats)
library(ggplot2)
library(ggsci)
library(RColorBrewer)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
type <- "theme"
remove_country <- function(df) {
df <- df %>%
select(-c("country"))
return(df)
}
consolidated_results <- readRDS(paste0("consolidated_results_", type, ".Rds"))
df <- remove_country(consolidated_results)
df <- melt(df, id.vars = "year")
library("Amelia")
library("circlize")
library("clValid")
library("corrplot")
library("cowplot")
library("factoextra")
library("forcats")
library("ggplot2")
library("ggsci")
library("Hmisc")
library("mlr")
library("oce")
library("raster")
library("RColorBrewer")
library("tmap")
library("dplyr")
library("import")
library("ggpubr")
consolidated_results <- readRDS(paste0("consolidated_results_", type, ".Rds"))
df <- remove_country(consolidated_results)
df <- melt(df, id.vars = "year")
library("reshape2")
consolidated_results <- readRDS(paste0("consolidated_results_", type, ".Rds"))
df <- remove_country(consolidated_results)
df <- melt(df, id.vars = "year")
df
head(df)
sums <-aggregate(df$value, by=list(df$year,df$variable), FUN=sum)
head(sums)
names(sums) = c("year","topic","sum")
names
head(sums)
themes = c("reservoir")
topic_subset2 <- subset(sums, topic == themes)
head(topic_subset2)
topic_subset2 <- subset(sums, topic == c("air quality"))
head(topic_subset2)
sums$topic
themes = c("air quality", "agriculture")
topic_subset2 <- subset(sums, topic %in% themes)
topic_subset2
class(topic_subset2)
sums <- subset(sums, topic %in% themes)
cumulative_sum <- lapply(sums$topic, function(topic_pick){
topic_subset <- subset(sums, topic == topic_pick)
return(cumsum(topic_subset$sum))
})
cumulative_sum
cumulative_sum <- lapply(unique(sums$topic), function(topic_pick){
topic_subset <- subset(sums, topic == topic_pick)
return(cumsum(topic_subset$sum))
})
length(cumulative_sum)
lapply(cumulative_sum, length)
nrow(sums)
install.packages("plotly")
diversity_by_country <- read.csv("./diversity/diversity by country.csv")
names(diversity_by_country)
