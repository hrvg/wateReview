a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "Topic model coverage",
y="NSF specific categories",
x = "Topic model for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
library(dplyr)
library(reshape2)
library(ggpubr)
library(tidyr)
library(ggplot2)
library(forcats)
######## load data #############
en <- read.csv("./topic_names_en.csv")
es <- read.csv("./topic_names_es.csv")
pt <- read.csv("./topic_names_pt.csv", na.strings=c("","NA"))
en$lang <- "en"
es$lang <- "es"
pt$lang <- "pt"
en2 <- melt(en,
id.vars = c("topic_id","lang"))
es2 <- melt(es,
id.vars = c("topic_id","lang"))
pt2 <- melt(pt,
id.vars = c("topic_id","lang"))
x <- rbind(en2,es2,pt2)
x <- na.omit(x)
######## filter #############
x2 <- x %>%
filter(variable == "NSF_specific") %>%
group_by(value, lang) %>%
tally
# need to order based on engligh numbers + number of overall topics
x2$nlang <- x2 %>%
group_by(value) %>%
group_map(~ rep(length(table(.x$lang)), length(table(.x$lang)))) %>%
unlist()
lvls <- as.character(x2$value[x2$lang=="en"])[order(x2$n[x2$lang=="en"])]
x2$value <- factor(x2$value, levels = lvls)
x2 <- na.omit(x2) # missing 1 spanish?
x2$lang <- factor(x2$lang, labels = c("English", "Spanish", "Portuguese"))
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "Topic model coverage",
y="NSF specific categories",
x = "Topic model for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "Topic model coverage",
y="NSF specific categories",
x = "Topic model for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'bold',
'bold', 'bold', 'plain', 'plain', 'bold',
'bold', 'plain', 'bold','bold', 'bold', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
setwd("~/R_code/LAC")
source("./diversity/lib_lac.R")
################### libraries #########################
library(dplyr)
library(vegan)
library(broom)
library(reshape2)
library(ggpubr)
library(data.table)
library(wesanderson)
library(ggplot2)
library(philentropy)
library(scales)
library(ggplotify)
library(plotly)
library(tidyr)
library(tidyverse)
library(ggrepel)
################### raw files #########################
general <- readRDS("./consolidated_results_NSF_general.Rds")
specific <- readRDS("./consolidated_results_NSF_specific.Rds") # 45 themes
methods <- readRDS("./consolidated_results_methods.Rds")
budget <- readRDS("./consolidated_results_water budget.Rds")
theme <- readRDS("./consolidated_results_theme.Rds")
# final CSV finals that reflect new country predictions are saved as "....2"
setwd("~/R_code/LAC")
source("./diversity/lib_lac.R")
################### libraries #########################
library(dplyr)
library(vegan)
library(broom)
library(reshape2)
library(ggpubr)
library(data.table)
library(wesanderson)
library(ggplot2)
library(philentropy)
library(scales)
library(ggplotify)
library(plotly)
library(tidyr)
library(tidyverse)
library(ggrepel)
################### raw files #########################
general <- readRDS("./consolidated_results_NSF_general.Rds")
specific <- readRDS("./consolidated_results_NSF_specific.Rds") # 45 themes
methods <- readRDS("./consolidated_results_methods.Rds")
budget <- readRDS("./consolidated_results_water budget.Rds")
theme <- readRDS("./consolidated_results_theme.Rds")
# final CSV finals that reflect new country predictions are saved as "....2"
View(general)
View(methods)
View(theme)
df <- remove_irrelevant(general)
df <- diversity_country(general)
################### functions #########################
remove_year_country <- function(df) {
df <- df %>%
filter(country != "Irrelevant") %>%
select(-c("year","country"))
return(df)
}
remove_year <- function(df) {
df <- df %>%
select(-c("year"))
return(df)
}
remove_country <- function(df) {
df <- df %>%
select(-c("country"))
return(df)
}
remove_irrelevant <- function(df) {
df <- df %>%
filter(country != "Irrelevant")
return(df)
}
diversity_country <- function(df) {
df <- df %>%
select(-c("year"))
df <- melt(df,
id.vars = c("country"))
df <- aggregate(df$value, by=list(df$country,df$variable), FUN=sum)
df <- df %>%
rename(country = Group.1, sepcies = Group.2, population = x) # species is country*topic
df <- group_by(df, country)
df <- do(df, tidy(diversity(.$population)))
df$y <- rank(df$x)
names(df) = c("country","entropy","entropy-rank")
return(df)
}
diversity_LAC <- function(df) {
df <- colSums(df)
df <- diversity(df)
return(df)
}
col_sums <- function(df) {
df <- colSums(df)
df$key=rownames(df)
return(sumdf)
}
diversity_country_2 <- function(df){
a <- remove_year(df) # pick data to work with
a <- remove_irrelevant(a)
a <- melt(a, id.vars = "country")
## count # papers per country
sums <- aggregate(a$value, by=list(a$country,a$variable), FUN=sum)
names(sums) = c("country","topic","sum")
country_sums <- aggregate(sums$sum, by=list(sums$country), FUN=sum) # no. papers per country
names(country_sums) = c("country","no.papers")
remove <- as.data.frame(country_sums$country[country_sums$no.papers < 30]) # list countries w/ < 30 papers
keep <- as.data.frame(country_sums$country[country_sums$no.papers > 30])
names(keep) <- "country"
## subset countries with > 30 papers
a <- subset(a, a$country %in% keep$country)
a <- aggregate(a$value, by=list(a$country,a$variable), FUN=sum)
a <- a %>%
rename(country = Group.1, sepcies = Group.2, population = x) # species is country*topic
a <- group_by(a, country)
a <- do(a, tidy(diversity(.$population)))
}
reduce_docs_for_JSd <- function(df){
a <- remove_year(df) # pick data to work with
a <- remove_irrelevant(a)
a <- melt(a, id.vars = "country")
## count # papers per country
sums <- aggregate(a$value, by=list(a$country,a$variable), FUN=sum)
names(sums) = c("country","topic","sum")
country_sums <- aggregate(sums$sum, by=list(sums$country), FUN=sum) # no. papers per country
names(country_sums) = c("country","no.papers")
remove <- as.data.frame(country_sums$country[country_sums$no.papers < 30]) # list countries w/ < 30 papers
keep <- as.data.frame(country_sums$country[country_sums$no.papers > 30])
names(keep) <- "country"
## subset countries with > 30 papers
a <- subset(a, a$country %in% keep$country)
names(a) = c("country","topic","value")
return(a)
}
reduce_docs_for_JSd_2 <- function(df){
a <- remove_year(df) # pick data to work with
a <- remove_irrelevant(a)
a <- melt(a, id.vars = "country")
names(a) = c("country","topic","value")
return(a)
}
get_JSd_country <- function(top, plot = FALSE){
p <- ggplot(subset(df, topic == top)) +
geom_density(aes(x = scaled, y = ..density.., fill= top)) +
xlim(c(-5, 5)) +
stat_function(fun = dnorm, n = 512, args = list(mean = 0, sd = 1)) +
labs(x = "scaled density",
y = "probability of research (rescaled)") +
theme_pubr()
p
if (plot) return(p)
g <- ggplot_build(p)
gdata <- g$data[[1]]$y / sum(g$data[[1]]$y) # topic - normalized
normdata <- g$data[[2]]$y / sum(g$data[[2]]$y) # standard, normal - normalized
return(1 - sqrt(as.numeric(JSD(rbind(gdata, normdata)))))
}
get_JSd_corpus <- function(top, plot = FALSE){
p <- ggplot(subset(df, countrytopic == top)) +
geom_density(aes(x = scaled, y = ..density.., fill= top)) +
xlim(c(-5, 5)) +
stat_function(fun = dnorm, n = 512, args = list(mean = 0, sd = 1)) +
labs(x = "scaled desntiy",
y = "probability of research (rescaled)") +
theme_pubr()
p
if (plot) return(p)
g <- ggplot_build(p)
gdata <- g$data[[1]]$y / sum(g$data[[1]]$y)
normdata <- g$data[[2]]$y / sum(g$data[[2]]$y)
return(1 - sqrt(as.numeric(JSD(rbind(gdata, normdata)))))
}
df <- remove_irrelevant(general)
df <- diversity_country(general)
write.csv(df,'./diversity/csvs/final-all-countries/diversity-budget.csv')
View(df)
df <- remove_irrelevant(general)
df <- diversity_country(df)
write.csv(df,'./diversity/csvs/final-all-countries/diversity-budget.csv')
View(df)
df <- remove_irrelevant(general)
df <- diversity_country(df)
write.csv(df,'./diversity/csvs/final-all-countries/diversity-general.csv')
df <- remove_irrelevant(specific)
df <- diversity_country(df)
write.csv(df,'./diversity/csvs/final-all-countries/diversity-specific.csv')
df <- remove_irrelevant(theme)
df <- diversity_country(df)
write.csv(df,'./diversity/csvs/final-all-countries/diversity-theme.csv')
df <- remove_irrelevant(methods)
df <- diversity_country(df)
write.csv(df,'./diversity/csvs/final-all-countries/diversity-methods.csv')
df <- remove_irrelevant(budget)
df <- diversity_country(df)
write.csv(df,'./diversity/csvs/final-all-countries/diversity-budget.csv')
# define subset
probs <- reduce_docs_for_JSd_2(general) # pick df
sums <-aggregate(probs$value, by=list(probs$country,probs$topic), FUN=sum) # re - summarize after removing countries w/ < 30 papers
names(sums) = c("country","topic","sum")
df <- sums %>%
group_by(country) %>%
mutate(prop = sum/sum(sum)) %>% # calculate proportion of research each country spends on each topic
group_by(topic) %>%
mutate(scaled = scale(prop)) %>% # scale by topic
ungroup() %>%
select(c("topic","scaled"))
country_distance<- sapply(unique(df$topic), get_JSd_country)
names(country_distance) <- unique(df$topic)
country_distance <- as.data.frame(country_distance)
country_distance$topic <- rownames(country_distance)
df <- probs %>%
mutate(countrytopic = paste(country,topic)) %>%
group_by(countrytopic) %>%
mutate(scaled = scale(value)) %>%
select(c("countrytopic","scaled")) # need to scale somehow?
topic_distance <- sapply(unique(df$countrytopic), get_JSd_corpus)
names(topic_distance) <- unique(df$countrytopic)
topic_distance <- as.data.frame(topic_distance)
topic_distance$countrytopic <- rownames(topic_distance)
topic_distance <- topic_distance %>%
na.omit() %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(y = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
# combine and save separate csvs
distance <- merge(country_distance, topic_distance, by = "topic")
write.csv(distance,'./diversity/csvs/final-all-countries/distance-methods.csv')
write.csv(distance,'./diversity/csvs/final-all-countries/distance-general')
View(distance)
View(topic_distance)
topic_distance <- topic_distance %>%
na.omit() %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(topic_distance = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
df <- probs %>%
mutate(countrytopic = paste(country,topic)) %>%
group_by(countrytopic) %>%
mutate(scaled = scale(value)) %>%
select(c("countrytopic","scaled")) # need to scale somehow?
topic_distance <- sapply(unique(df$countrytopic), get_JSd_corpus)
names(topic_distance) <- unique(df$countrytopic)
topic_distance <- as.data.frame(topic_distance)
topic_distance$countrytopic <- rownames(topic_distance)
topic_distance <- topic_distance %>%
na.omit() %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(topic_distance = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
# combine and save separate csvs
distance <- merge(country_distance, topic_distance, by = "topic")
View(distance)
write.csv(distance,'./diversity/csvs/final-all-countries/distance-general')
View(distance)
write.csv(distance,'./diversity/csvs/final-all-countries/distance-general.csv')
probs <- reduce_docs_for_JSd_2(specific) # pick df
############### across countries
sums <-aggregate(probs$value, by=list(probs$country,probs$topic), FUN=sum) # re - summarize after removing countries w/ < 30 papers
names(sums) = c("country","topic","sum")
df <- sums %>%
group_by(country) %>%
mutate(prop = sum/sum(sum)) %>% # calculate proportion of research each country spends on each topic
group_by(topic) %>%
mutate(scaled = scale(prop)) %>% # scale by topic
ungroup() %>%
select(c("topic","scaled"))
country_distance<- sapply(unique(df$topic), get_JSd_country)
names(country_distance) <- unique(df$topic)
country_distance <- as.data.frame(country_distance)
country_distance$topic <- rownames(country_distance)
############### across documents
df <- probs %>%
mutate(countrytopic = paste(country,topic)) %>%
group_by(countrytopic) %>%
mutate(scaled = scale(value)) %>%
select(c("countrytopic","scaled")) # need to scale somehow?
topic_distance <- sapply(unique(df$countrytopic), get_JSd_corpus)
names(topic_distance) <- unique(df$countrytopic)
topic_distance <- as.data.frame(topic_distance)
topic_distance$countrytopic <- rownames(topic_distance)
topic_distance <- topic_distance %>%
na.omit() %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(topic_distance = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
# combine and save separate csvs
distance <- merge(country_distance, topic_distance, by = "topic")
write.csv(distance,'./diversity/csvs/final-all-countries/distance-specific.csv')
probs <- reduce_docs_for_JSd_2(theme) # pick df
############### across countries
sums <-aggregate(probs$value, by=list(probs$country,probs$topic), FUN=sum) # re - summarize after removing countries w/ < 30 papers
names(sums) = c("country","topic","sum")
df <- sums %>%
group_by(country) %>%
mutate(prop = sum/sum(sum)) %>% # calculate proportion of research each country spends on each topic
group_by(topic) %>%
mutate(scaled = scale(prop)) %>% # scale by topic
ungroup() %>%
select(c("topic","scaled"))
country_distance<- sapply(unique(df$topic), get_JSd_country)
names(country_distance) <- unique(df$topic)
country_distance <- as.data.frame(country_distance)
country_distance$topic <- rownames(country_distance)
############### across documents
df <- probs %>%
mutate(countrytopic = paste(country,topic)) %>%
group_by(countrytopic) %>%
mutate(scaled = scale(value)) %>%
select(c("countrytopic","scaled")) # need to scale somehow?
topic_distance <- sapply(unique(df$countrytopic), get_JSd_corpus)
names(topic_distance) <- unique(df$countrytopic)
topic_distance <- as.data.frame(topic_distance)
topic_distance$countrytopic <- rownames(topic_distance)
topic_distance <- topic_distance %>%
na.omit() %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(topic_distance = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
# combine and save separate csvs
distance <- merge(country_distance, topic_distance, by = "topic")
write.csv(distance,'./diversity/csvs/final-all-countries/distance-theme.csv')
View(distance)
probs <- reduce_docs_for_JSd_2(methods) # pick df
############### across countries
sums <-aggregate(probs$value, by=list(probs$country,probs$topic), FUN=sum) # re - summarize after removing countries w/ < 30 papers
names(sums) = c("country","topic","sum")
df <- sums %>%
group_by(country) %>%
mutate(prop = sum/sum(sum)) %>% # calculate proportion of research each country spends on each topic
group_by(topic) %>%
mutate(scaled = scale(prop)) %>% # scale by topic
ungroup() %>%
select(c("topic","scaled"))
country_distance<- sapply(unique(df$topic), get_JSd_country)
names(country_distance) <- unique(df$topic)
country_distance <- as.data.frame(country_distance)
country_distance$topic <- rownames(country_distance)
############### across documents
df <- probs %>%
mutate(countrytopic = paste(country,topic)) %>%
group_by(countrytopic) %>%
mutate(scaled = scale(value)) %>%
select(c("countrytopic","scaled")) # need to scale somehow?
topic_distance <- sapply(unique(df$countrytopic), get_JSd_corpus)
names(topic_distance) <- unique(df$countrytopic)
topic_distance <- as.data.frame(topic_distance)
topic_distance$countrytopic <- rownames(topic_distance)
topic_distance <- topic_distance %>%
na.omit() %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(topic_distance = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
# combine and save separate csvs
distance <- merge(country_distance, topic_distance, by = "topic")
write.csv(distance,'./diversity/csvs/final-all-countries/distance-methods.csv')
probs <- reduce_docs_for_JSd_2(budget) # pick df
############### across countries
sums <-aggregate(probs$value, by=list(probs$country,probs$topic), FUN=sum) # re - summarize after removing countries w/ < 30 papers
names(sums) = c("country","topic","sum")
df <- sums %>%
group_by(country) %>%
mutate(prop = sum/sum(sum)) %>% # calculate proportion of research each country spends on each topic
group_by(topic) %>%
mutate(scaled = scale(prop)) %>% # scale by topic
ungroup() %>%
select(c("topic","scaled"))
country_distance<- sapply(unique(df$topic), get_JSd_country)
names(country_distance) <- unique(df$topic)
country_distance <- as.data.frame(country_distance)
country_distance$topic <- rownames(country_distance)
############### across documents
df <- probs %>%
mutate(countrytopic = paste(country,topic)) %>%
group_by(countrytopic) %>%
mutate(scaled = scale(value)) %>%
select(c("countrytopic","scaled")) # need to scale somehow?
topic_distance <- sapply(unique(df$countrytopic), get_JSd_corpus)
names(topic_distance) <- unique(df$countrytopic)
topic_distance <- as.data.frame(topic_distance)
topic_distance$countrytopic <- rownames(topic_distance)
topic_distance <- topic_distance %>%
na.omit() %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(topic_distance = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
# combine and save separate csvs
distance <- merge(country_distance, topic_distance, by = "topic")
write.csv(distance,'./diversity/csvs/final-all-countries/distance-budget.csv')
