labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr()
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n, fill = "white"))
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n), color = "white")
a
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr()
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
rremove("legend") +
theme_pubr()
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
rremove("guide") +
theme_pubr()
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
rremove("legend") +
theme_pubr()
a +
scale_fill_gradient(low = "#6fb6fd",
high = "#012345") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey48",
high = "grey20") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey76",
high = "grey20") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey67",
high = "grey0") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.x = element_text(face = c('bold', 'bold', 'plain', 'plain', 'bold')))
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.x = element_text(face = 'bold'))
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'plain', 'plain', 'bold')))
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain','plain','plain'
))) +
theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain','plain','plain'
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('bold', 'bold', 'bold', 'bold', 'bold',
'plain', 'plain', 'bold', 'plain', 'bold',
'bold', 'bold', 'plain', 'bold', 'bold',
'plain', 'plain', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'bold', 'bold',
'plain', 'plain', 'bold', 'bold', 'bold','bold','bold'
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'bold', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a <- ggplot(data = x2, aes(x = lang, y = fct_reorder(value, nlang))) +
geom_tile(aes(fill = nlang, width=0.9, height=0.9)) +
geom_text(aes(label = n))
a
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
#theme_pubr() +
rremove("legend")
a +
scale_fill_gradient(low = "grey89",
high = "grey50") +
labs(title= "LDA coverage",
y="NSF specific categories",
x = "LDA for each language") +
theme_pubr() +
theme(axis.text.y = element_text(face = c('plain','plain','plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'plain', 'plain', 'plain', 'plain',
'plain', 'bold', 'plain', 'plain', 'plain',
'bold', 'bold', 'plain', 'bold', 'bold',
'bold', 'plain', 'bold','plain', 'plain', # 6-10
'bold', 'bold', 'bold','bold','bold' # 1-5
))) +
rremove("legend")
# define subset
probs <- reduce_docs_for_JSd(budget)
setwd("~/R_code/LAC")
source("./diversity/lib_lac.R")
################### libraries #########################
library(dplyr)
library(vegan)
library(broom)
library(reshape2)
library(ggpubr)
library(data.table)
library(wesanderson)
library(ggplot2)
library(philentropy)
library(scales)
library(ggplotify)
library(plotly)
library(tidyr)
library(tidyverse)
library(ggrepel)
################### raw files #########################
general <- readRDS("./consolidated_results_NSF_general.Rds")
specific <- readRDS("./consolidated_results_NSF_specific.Rds") # 45 themes
methods <- readRDS("./consolidated_results_methods.Rds")
budget <- readRDS("./consolidated_results_water budget.Rds")
theme <- readRDS("./consolidated_results_theme.Rds")
# define subset
probs <- reduce_docs_for_JSd(budget)
probs <- probs %>% mutate(topic = replace(topic, topic == "groundwater flow", "groundwater"))
sums <-aggregate(probs$value, by=list(probs$country,probs$topic), FUN=sum) # re - summarize after removing countries w/ < 30 papers
names(sums) = c("country","topic","sum")
df <- sums %>%
group_by(country) %>%
mutate(prop = sum/sum(sum)) %>% # calculate proportion of research each country spends on each topic
group_by(topic) %>%
mutate(scaled = scale(prop)) %>% # scale by topic
ungroup() %>%
select(c("topic","scaled"))
country_distance<- sapply(unique(df$topic), get_JSd_country)
names(country_distance) <- unique(df$topic)
country_distance <- as.data.frame(country_distance)
country_distance$topic <- rownames(country_distance)
# graphs for guide
reservoir <- get_JSd_country('reservoirs', plot = T)
rivers <- get_JSd_country('rivers', plot = T)
reservoir
rivers
get_JSd_country('fish', plot = T)
get_JSd_country('irrigation', plot = T)
budget <- read.csv("./diversity/csvs/waterbudgetdistance.csv")
methods <- read.csv("./diversity/csvs/methodsdistance.csv")
methods.base <- ggplot(methods,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
budget.base <- ggplot(budget,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
methods.edit <-
methods.base +
#grids() +
coord_fixed() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
labs(title = "Research methods")
budget.edit <-
budget.base +
#grids() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
coord_fixed() +
labs(title = "Components of water budget")
reservoir.edit <-
reservoir +
rremove("legend") +
clean_theme() +
labs(title = "Far from normal")
rivers.edit <-
rivers +
rremove("legend") +
ylim(0,0.8) +
clean_theme() +
labs(title = "Close to normal")
methods.edit
budget.edit
reservoir.edit
rivers.edit
theme <- read.csv("./diversity/csvs/themesdistance.csv")
theme.base <- ggplot(theme,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
themes.base <- ggplot(theme,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
themes.edit <-
themes.base +
#grids() +
coord_fixed() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
labs(title = "Research methods")
themes.edit
themes.edit <-
themes.base +
#grids() +
coord_fixed() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
labs(title = "Themes")
themes.edit
################### raw files #########################
general <- readRDS("./consolidated_results_NSF_general.Rds")
# define subset
probs <- reduce_docs_for_JSd(general)
sums <-aggregate(probs$value, by=list(probs$country,probs$topic), FUN=sum) # re - summarize after removing countries w/ < 30 papers
names(sums) = c("country","topic","sum")
df <- sums %>%
group_by(country) %>%
mutate(prop = sum/sum(sum)) %>% # calculate proportion of research each country spends on each topic
group_by(topic) %>%
mutate(scaled = scale(prop)) %>% # scale by topic
ungroup() %>%
select(c("topic","scaled"))
country_distance<- sapply(unique(df$topic), get_JSd_country)
names(country_distance) <- unique(df$topic)
country_distance <- as.data.frame(country_distance)
country_distance$topic <- rownames(country_distance)
df <- probs %>%
mutate(countrytopic = paste(country,topic)) %>%
group_by(countrytopic) %>%
mutate(scaled = scale(value)) %>%
select(c("countrytopic","scaled")) # need to scale somehow?
topic_distance <- sapply(unique(df$countrytopic), get_JSd_corpus)
names(topic_distance) <- unique(df$countrytopic)
topic_distance <- as.data.frame(topic_distance)
topic_distance$countrytopic <- rownames(topic_distance)
topic_distance <- topic_distance %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(topic_distance = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
# combine and save separate csvs
distance <- merge(country_distance, topic_distance, by = "topic")
write.csv(distance, file = "./diversity/csvs/themesdistance.csv")
write.csv(distance, file = "./diversity/csvs/generaldistance.csv")
probs <- reduce_docs_for_JSd(theme)
#probs <- probs %>% mutate(topic = replace(topic, topic == "groundwater flow", "groundwater"))
############### across countries ###########
# calculate distance from normal for % of research done in each country
sums <-aggregate(probs$value, by=list(probs$country,probs$topic), FUN=sum) # re - summarize after removing countries w/ < 30 papers
names(sums) = c("country","topic","sum")
df <- sums %>%
group_by(country) %>%
mutate(prop = sum/sum(sum)) %>% # calculate proportion of research each country spends on each topic
group_by(topic) %>%
mutate(scaled = scale(prop)) %>% # scale by topic
ungroup() %>%
select(c("topic","scaled"))
country_distance<- sapply(unique(df$topic), get_JSd_country)
names(country_distance) <- unique(df$topic)
country_distance <- as.data.frame(country_distance)
country_distance$topic <- rownames(country_distance)
# graphs for guide
# reservoir <- get_JSd_country('reservoirs', plot = T)
# rivers <- get_JSd_country('rivers', plot = T)
# get_JSd_country('irrigation', plot = T)
############### across documents ###########
# calculate distance from normal for all documents
# MEDIAN OF JSD for EACH topic by 12 COUNTRIES
df <- probs %>%
mutate(countrytopic = paste(country,topic)) %>%
group_by(countrytopic) %>%
mutate(scaled = scale(value)) %>%
select(c("countrytopic","scaled")) # need to scale somehow?
topic_distance <- sapply(unique(df$countrytopic), get_JSd_corpus)
names(topic_distance) <- unique(df$countrytopic)
topic_distance <- as.data.frame(topic_distance)
topic_distance$countrytopic <- rownames(topic_distance)
topic_distance <- topic_distance %>%
mutate(topic = word(countrytopic, 2, -1)) %>%
group_by(topic) %>%
mutate(topic_distance = median(topic_distance)) %>%
select(c("topic","topic_distance")) %>%
distinct()
# combine and save separate csvs
distance <- merge(country_distance, topic_distance, by = "topic")
write.csv(distance, file = "./diversity/csvs/themedistance")
general <- read.csv("./diversity/csvs/generalsdistance.csv")
######## general ##########
general.base <- ggplot(general,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
general.edit <-
general.base +
#grids() +
coord_fixed() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
labs(title = "Research methods")
general.edit
general <- read.csv("./diversity/csvs/generalsdistance.csv")
general <- read.csv("./diversity/csvs/generaldistance.csv")
######## general ##########
general.base <- ggplot(general,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
general.edit <-
general.base +
#grids() +
coord_fixed() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
labs(title = "Research methods")
general.edit
######## general ##########
general.base <- ggplot(general,aes(topic_distance,country_distance, label = topic)) +
geom_text_repel() +
geom_point() +
theme_pubr() +
labs(x = "Normality across documents",y = "Normality across countries")
#general.edit <-
general.base +
#grids() +
coord_fixed() +
ylim(0.55,0.95) +
xlim(0.25,0.65) +
labs(title = "NSF General Categories")
#general.edit <-
general.base +
#grids() +
coord_fixed() +
#ylim(0.55,0.95) +
#xlim(0.25,0.65) +
labs(title = "NSF General Categories")
