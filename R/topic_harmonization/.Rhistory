install.packages("flexdashboard")
install.packages("shiny")
install.packages("shinydashboard")
sessionInfo()
updateR
library(updateR)
library("updateR")
install.packages("updateR")
install.packages("htmltools")
update.packages(checkBuilt=TRUE, ask=FALSE)
l.present_data <- list()
vars <- c("tmin", "tmax", "prec", "bio")
for (i in seq_along(vars)){
l.present_data[[i]] <- raster::getData("worldclim", var = vars[i], res = 2.5)
}
library(raster)
present.data <- do.call(stack, l.present_data)
writeRaster(present.data, "present_data.tiff")
writeRaster(present.data, "present_data.tif")
save(present.data, "present_data.rda")
save("present.data", "present_data.rda")
save(present.data, "present_data.rda")
save(present.data, file = "present_data.rda")
vars <- c("tmin","tmax","prec","bio") # variables to get
wc <- lapply(vars, function(x) {getData("worldclim", var = x, res = 2.5)}) # world clim vars
wc
wcc <- do.call(stack, wc)
wcc
saveRDS(wcc, file = "wcc")
save(wcc, file = "wcc.rda")
k <- seq(3, 10)
k
2 * k - 3
prod(2 * k - 3)
prod(2 * k) - 3)
prod(2 * k) - 3
prod(2 * k) - 3)
prod(2 * k - 3)
k <- seq(3, 4)
prod(2 * k - 3)
k
prod(2 * seq(3,5) - 3)
prod(2 * seq(3,10) - 3)
prod(2 * seq(3,10) - 3)
prod(2 * seq(3, 3) - 3)
prod(2 * seq(3, 3) - 3)
N <- lapply(seq(3, 10), function(k) prod(2 * seq(3, k) - 3))
N
N <- sapply(seq(3, 10), function(k) prod(2 * seq(3, k) - 3))
N
N <- c(1, N)
N
K <- seq(2, 10)
N
K
plot(K, N)
loglog(K, N)
plot(K, N, log = "y")
plot(K, N, log = "y", labx = "number of classes")
plot(K, N, log = "y", xlab = "number of classes")
plot(K, N, log = "y", xlab = "number of classes", ylab = "number of possible trees")
dev.new()
dev.new()
plot(K, N, log = "y", xlab = "number of classes", ylab = "number of possible trees")
pdf("KvN")
plot(K, N, log = "y", xlab = "number of classes", ylab = "number of possible trees")
dev.off()
N <- sapply(seq(3, 10), function(k) prod(2 * seq(3, k) - 3))
N <- c(1, N)
K <- seq(2, 10)
N
K
?combinatorics
??combinatorics
??combination
combn(10, 2)
combn(10, 8)
combn(10, 10)
combn(10, 2)
combn(10, 9)
combn(10, 2)
combn(10, 8)
combn(8, 8)
choose(8, 2)
lchoose(8, 2)
log(28)
choose(8, 8)
choose(8, 2)
choose(28, 4)
prod(2 * seq(3,8) - 3)
combn(8, 2)
choose(8, 2) ** 4
choose(8, 2) * choose(6, 2) * choose(4, 2) * choose(2, 2)
choose(8, 2)
combn(8, 2)
combn(6, 2)
combn(4, 2)
combn(3, 2)
combn(6, 2)
combn(4, 2)
duplicated(combn(4, 2))
combn(4, 2)
prod(2 * seq(3, 4) - 3)
prod(2 * seq(3, 4)) - 3
combn(4, 2)
expand.grid(4, 2)
expand.grid(seq(1, 6))
expand.grid(seq(1, 6), seq(1, 6))
comb_with_replacement <- function(n, r){
return( factorial(n + r - 1) / (factorial(r) * factorial(n - 1)) )
}
comb_with_replacement(4, 2)
combn(4, 2)
combn(4, 2)
combn(10, 2)
combn(3, 2)
combn(4, 2)
2 * (4-1
)
(4-1) + (4-2)
combn(6, 2)
(6 - 1) + (6 - 2)
factorial(4) / factorial(2)
choose(4, 2)
factorial(4) / (factorial(4 - 2) * factorial(2))
(4-1) + (4-2)
choose(4, 2)
choose(4, 2) - (4 - 1 + 4 - 2)
choose(6, 2) - (6 - 1 + 6 - 2)
choose((choose(6, 2) - (6 - 1 + 6 - 2)), 1Ã 
choose((choose(6, 2) - (6 - 1 + 6 - 2)), 1)
combn(3, 2)
combn(4, 2)
1/2 choose(4, 2)
1/2 * choose(4, 2)
1/2 * choose(6, 3)
1/2 * (choose(4, 2))
1/2 * (choose(4, 2)) * 1 * 1
T((5+1)/2)
choose(5, 3)
choose(4, 2)
choose(4, 2) * 0.5
choose(5, 3)
choose(5, 3)
choose(4, 2)
choose(6, 2)
choose(4, 2)
choose(7, 2)
choose(5, 6/2)
choose(5, 4/2)
choose(5, 3)
choose(5, 2)
combn(5, 2)
combn(5, 3)
combn(5, 5)
factorial(5)/factorial(0)
factorial(0)
factorial(4)
factorial(3)
factorial(3) / factorial(3-3) / factorial(3)
factorial(2)
factorial(4)
factorial(5)
factorial(2)
factorial(3)
sapply(seq(5), factorial)
sapply(seq(5), choose, 2)
sapply(seq(2, 5), choose, 2)
sapply(seq(2, 5), function(k) choose(k, k/2) )
sapply(seq(2, 6, 2), function(k) choose(k, k/2) )
sapply(seq(2, 6, 2), function(k) 0.5 * choose(k, k/2) )
factorial(4) / 2^(4/2)
factorial(4)
2^2
factorial(5) / 2^[5/2]
factorial(5) / 2^(5/2)
factorial(4) / 2^(4/2)
2^4
2^3
combn(3)
combn(3, 1)
factorial(3)
factorial(6, 2)
combn(4, 2)
choose(4, 2)
2 * n - 3
2 * 4 - 3
choose(5, 2)
combn(5, 2)
choose(5, 2) - ((5-1 + 5 - 2)
)
# min.k <- 2 # run20
# k <- 2**(0:13)*rep(min.k) # run20
min.k <- 2 # run20
k <- 2**(0:13)*rep(min.k) # run20
k
nb <- 5+1 # run23, run25, run27, run29, run31, run34, run36, run38, run40, run 42, run44, run47, run49, run51, run53, run55
lij <- lapply(seq(0,length(k)-nb), function(x) c(1+x,nb+x))
nb <- 5+1 # run23, run25, run27, run29, run31, run34, run36, run38, run40, run 42, run44, run47, run49, run51, run53, run55
lij <- lapply(seq(0,length(k)-nb), function(x) c(1+x,nb+x))
lij
alr <- lapply(seq(1,(j-i)), function(ii){
x <- k[j] / k[i:j][ii]
return(x)
})
n <- 1
i <- unlist(lij[n])[1]
j <- unlist(lij[n])[2]
i
j
alr <- lapply(seq(1,(j-i)), function(ii){
x <- k[j] / k[i:j][ii]
return(x)
})
alr
k
float("1")
numeric("2")
class(1.2)
as.numeric("a")
max([1])
max(c(1)
)
max(c())
num1 <- 'a'
num2 <- -1
numList <- [num1, num2]
filteredList <- lapply(numList, as.numeric)
numList <- [num1, num2]
filteredList <- lapply(numList, as.numeric)
numList <- c(num1, num2)
filteredList <- lapply(numList, as.numeric)
filteredList
filteredList <- sapply(numList, as.numeric)
filteredList <- na.omit(filteredList)
filteredList
numList <- c(num1, num2)
filteredList <- lapply(numList, as.numeric)
filteredList <- na.omit(filteredList)
filteredList
filteredList <- na.omit(unlist(filteredList))
filteredList
na.omit(filteredList)
?as.numeric
filteredList <- unlist(filteredList)
filteredList
filteredList <- unlist(lapply(numList, as.numeric))
filteredList
?gsub
gsub(NA, filteredList, -Inf)
filteredList
gsub(NA, -Inf, filteredList)
max(filteredList, na.rm = TRUE)
num2 <- "b"
numList <- c(num1, num2)
filteredList <- lapply(numList, as.numeric)
filteredList
max(unlist(filteredList), na.rm = TRUE)
?max
x = randn(500)
x <- rnorm(500)
x
y <- sort(x)
plot(x,y)
y <- x^2
plot(x,y)
fit <- lm(y ~ x)
summary(fit)
fit <- lm(y^2 ~ x)
summary(fit)
fit <- lm(y ~ x^2)
summary(fit)
summary(fit
sqrt(2)
sqrt(2) * 1.16
sqrt(2) * 1.6
sqrt(2) * 1.6 / 2
library(raster)
r <- raster(file.path("~/research/exploitation/out/run57/individual_Hrasters/640.grd"))
spplot(r)
spplot(r, zlim = c(0, 1))
?spplot
spplot(r, par.settings = list(fontsize = list(text = 20)))
spplot(r, par.settings = list(fontsize = list(text = 20)), names.attr = "640")
spplot(r, par.settings = list(fontsize = list(text = 20)), main = "640")
spplot(r, par.settings = list(fontsize = list(text = 20)), main = "640", at = seq(0, 1, 0.1))
spplot(r, par.settings = list(fontsize = list(text = 20)), main = "640", at = seq(0, 1, 0.01))
data.dir <- "/media/hguillon/hrvg/research/data/SCAF-LCZO/SCAF/SCAF_guillon/Porto-Rico"
lf <- list.files(file.path(data.dir), recursive = TRUE, pattern = "sortieSCAF_")
lf
data.dir <- "/media/hguillon/hrvg/research/data/SCAF-LCZO/SCAF/SCAF_guillon/Porto-Rico"
lf <- list.files(file.path(data.dir), recursive = TRUE, pattern = "sortieSCAF_")
library(openxlsx)
l.df <- lapply(lf, function(xlsxFile) read.xlsx(xlsxFile, sheet = 2, skipEmptyCols = FALSE))
?list.files
data.dir <- "/media/hguillon/hrvg/research/data/SCAF-LCZO/SCAF/SCAF_guillon/Porto-Rico"
lf <- list.files(file.path(data.dir), recursive = TRUE, pattern = "sortieSCAF_", full.names = TRUE)
library(openxlsx)
l.df <- lapply(lf, function(xlsxFile) read.xlsx(xlsxFile, sheet = 2, skipEmptyCols = FALSE))
l.df
data.dir <- "/media/hguillon/hrvg/research/data/SCAF-LCZO/SCAF/SCAF_guillon/Porto-Rico"
lf <- list.files(file.path(data.dir), recursive = TRUE, pattern = "sortieSCAF_", full.names = TRUE)
library(openxlsx)
l.df <- lapply(lf, function(xlsxFile) read.xlsx(xlsxFile, sheet = 2, skipEmptyCols = FALSE))
df <- do.call(cbind, l.df)
df
df <- df[, !(colnames(df) %in% c("X1", "X2"))]
df
Ws.df <- df[2:9, ]
Ws.df
rho.p <- 2000
rho.f <- 1000
mu <- 10E-3
g <- 9.81
R.df <- sqrt(Ws.df * (2/9 * (rho.p - rho.f) / mu * g)^(-1) )
R.df
R.df <- sqrt(Ws.df * (2/9 * (rho.p - rho.f) / mu * g)^(-1) ) * 1E-6
R.df
R.df <- sqrt(Ws.df * (2/9 * (rho.p - rho.f) / mu * g)^(-1) ) * 1E6
R.df
Ws.df
data.dir <- "/media/hguillon/hrvg/research/data/SCAF-LCZO/SCAF/SCAF_guillon/Porto-Rico"
lf <- list.files(file.path(data.dir), recursive = TRUE, pattern = "sortieSCAF_", full.names = TRUE)
library(openxlsx)
l.df <- lapply(lf, function(xlsxFile) read.xlsx(xlsxFile, sheet = 2, skipEmptyCols = FALSE))
df <- do.call(cbind, l.df)
df <- df[, !(colnames(df) %in% c("X1", "X2"))]
Ws.df <- df[2:9, ]
row.names(Ws.df) <- c("mean", "std", "min", "25%", "50%", "75%", "max")
rho.p <- 2000
rho.f <- 1000
mu <- 10E-3
g <- 9.81
R.df <- sqrt(Ws.df * (2/9 * (rho.p - rho.f) / mu * g)^(-1) ) * 1E6
row.names(R.df) <- row.names(Ws.df)
write.csv(Ws.df, "Ws.csv", row.names = TRUE)
write.csv(R.df, "R.csv", row.names = TRUE)
dim(Ws.df)
Ws.df
data.dir <- "/media/hguillon/hrvg/research/data/SCAF-LCZO/SCAF/SCAF_guillon/Porto-Rico"
lf <- list.files(file.path(data.dir), recursive = TRUE, pattern = "sortieSCAF_", full.names = TRUE)
library(openxlsx)
l.df <- lapply(lf, function(xlsxFile) read.xlsx(xlsxFile, sheet = 2, skipEmptyCols = FALSE))
df <- do.call(cbind, l.df)
df <- df[, !(colnames(df) %in% c("X1", "X2"))]
Ws.df <- df[2:8, ]
row.names(Ws.df) <- c("mean", "std", "min", "25%", "50%", "75%", "max")
rho.p <- 2000
rho.f <- 1000
mu <- 10E-3
g <- 9.81
R.df <- sqrt(Ws.df * (2/9 * (rho.p - rho.f) / mu * g)^(-1) ) * 1E6
row.names(R.df) <- row.names(Ws.df)
write.csv(Ws.df, "Ws.csv", row.names = TRUE, overwrite = TRUE)
write.csv(R.df, "R.csv", row.names = TRUE, overwrite = TRUE)
data.dir <- "/media/hguillon/hrvg/research/data/SCAF-LCZO/SCAF/SCAF_guillon/Porto-Rico"
lf <- list.files(file.path(data.dir), recursive = TRUE, pattern = "sortieSCAF_", full.names = TRUE)
library(openxlsx)
l.df <- lapply(lf, function(xlsxFile) read.xlsx(xlsxFile, sheet = 2, skipEmptyCols = FALSE))
df <- do.call(cbind, l.df)
df <- df[, !(colnames(df) %in% c("X1", "X2"))]
Ws.df <- df[2:8, ]
row.names(Ws.df) <- c("mean", "std", "min", "25%", "50%", "75%", "max")
rho.p <- 2000
rho.f <- 1000
mu <- 10E-3
g <- 9.81
R.df <- sqrt(Ws.df * (2/9 * (rho.p - rho.f) / mu * g)^(-1) ) * 1E6
row.names(R.df) <- row.names(Ws.df)
write.csv(Ws.df, "Ws.csv", row.names = TRUE)
write.csv(R.df, "R.csv", row.names = TRUE)
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='herveguillon',
token='FB6DBB5FE26A44CFAC7BD2CB9E5F19D2',
secret='<SECRET>')
rsconnect::setAccountInfo(name='herveguillon',
token='FB6DBB5FE26A44CFAC7BD2CB9E5F19D2',
secret='<SECRET>')
rsconnect::setAccountInfo(name='herveguillon',
token='FB6DBB5FE26A44CFAC7BD2CB9E5F19D2',
secret='nwrOMVYlLwdEz6lb/2UuXS/Lh6Iq3yXfkVXtSznS')
install.packages("maps")
install.packages("leaflet")
install.packages("sf")
install.packages("tmap")
install.packages("tmap", dependencies = TRUE)
install.packages("sf", dependencies = TRUE)
library(tmap)
install.packages("tmap", dependencies = TRUE)
install.packages("tmap", dependencies = TRUE)
install.packages("rgdal", dependencies = TRUE)
install.packages("tmap", dependencies = TRUE)
install.packages("tmap")
library(tmap)
install.packages(c("backports", "BH", "callr", "caTools", "colorspace", "curl", "devtools", "digest", "evaluate", "forcats", "ggplot2", "ggsignif", "git2r", "glue", "haven", "htmlwidgets", "httpuv", "httr", "igraph", "knitr", "later", "lazyeval", "lintr", "lme4", "maptools", "markdown", "mime", "modelr", "openssl", "pdftools", "pracma", "processx", "purrr", "R6", "raster", "readr", "readxl", "rmarkdown", "rstudioapi", "shiny", "shinydashboard", "stringi", "stringr", "testthat", "tidyr", "tinytex", "webp", "xfun", "xmlparsedata", "xtable", "zip", "zoo"))
install.packages("tmap")
install.packages("tmap")
install.packages("rgdal")
install.packages("rgdal")
install.packages("rgdal")
install.packages("rgdal")
install.packages("rgdal")
install.packages("sf")
install.packages("tmap")
library(tmaptools)
tmaptools::palette_explorer()
library(latex2exp)
install.packages("latex2exp")
??tm_lines
x <- 1:5
x
y <- 2 * x
y
x
lm(y ~ x) # y = f(x)
linear_model <- lm(y ~ x) # y = f(x)
summary(linear_model)
library(readr)
phab <- read_csv("thesis/data/california_rivers/PHAB/phab-rafi-15apr19.csv")
View(phab)
names(phab)
table(phab$analytename)
dim(phab)
table(phab$protocolname)
coords <- cbind(phab$latitude, phab$longitude)
library(sp)
pts <- SpatialPoints(coords)
pts <- SpatialPoints(na.omit(coords))
pts
spplot(pts)
plot(pts)
install.packages("imager")
setwd("~/thesis/exploitation/R/latin_america/R/topic_harmonization")
library(shinydashboard)
library(maps)
library(dplyr)
library(leaflet)
df <- read.csv("../../data/topic_harmonization.csv")
df_useful <- df[, grep("useful", colnames(df))]
df_name <- df[, grep("name", colnames(df))]
df
df_name
df_useful
names(df)
df <- read.csv("../../data/topic_harmonization.csv")
df_useful <- df[, grep("useful", colnames(df))]
df_name <- df[, grep("name", colnames(df))]
dim(df)
dim(df_useful)
dim(df_name)
head(df_name)
head(df_useful)
df <- read.csv("../../data/topic_harmonization.csv")
df_useful <- df[, grep("useful", colnames(df))]
df_name <- df[, grep("name", colnames(df))]
head(df_useful)
tail(df_useful)
head(df_names)
head(df_name)
tail(df_name)
library(wordcloud)
install.packages("wordcloud")
install.packages("tm")
ggplot(data.frame(useful = unname(df_useful[input$topic, ])), aes(x = useful)) + geom_bar() + coord_flip()
library(ggplot2)
input$topic <- 3
input <- list()
input$topic <- 3
ggplot(data.frame(useful = unname(df_useful[input$topic, ])), aes(x = useful)) + geom_bar() + coord_flip()
df_useful[input$topic, ]
unname(df_useful[input$topic, ])
data.frame(useful = unname(df_useful[input$topic, ])
)
data.frame(useful = as.vector(df_useful[input$topic, ]))
data.frame(useful = unname(t(df_useful[input$topic, ])))
df$useful <- as.factor(df$useful)
